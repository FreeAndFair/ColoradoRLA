#!/bin/bash

# Build a ColoradoRLA release zip file

set -eux -o pipefail

# Uncomment to single-step thru this bash script
# trap read debug

echo "Have you applied any necessary changes for deployment? C-c if not."
read

export TRAVIS_BUILD_DIR=`git rev-parse --show-toplevel`
export CLIENT_DIR="${TRAVIS_BUILD_DIR}/client"
export SERVER_DIR="${TRAVIS_BUILD_DIR}/server/eclipse-project"
export TEST_DIR="${TRAVIS_BUILD_DIR}/test"

version=$(sed < "${SERVER_DIR}/pom.xml" '2 s/xmlns=".*"//g' | xmllint --xpath '/project/version/text()' - 2>/dev/null)
relname=ColoradoRLA-$version
reldir=$SERVER_DIR/target/$relname

mkdir -p $reldir

cd $SERVER_DIR
mkdir -p target
mvn package > target/mvn.stdout
jar=target/colorado_rla-$version-shaded.jar
cp $jar $reldir/corla-server.jar

# httpd
cp ../deploy/corla.conf $reldir

echo 'Checkout an alternate branch now if desired. Hit return when ready.'
read
echo Proceeding

# cd /srv/s/electionaudits/ColoradoRLA/client
cd $CLIENT_DIR
npm install
script/dist
cd dist
zip -r $reldir/corla-client.zip *

cp $TEST_DIR/corla-test-credentials.psql $reldir

relzip=$SERVER_DIR/target/$relname.zip

cd $SERVER_DIR/target
zip -r $relzip $relname

echo "TODO also: add to $reldir:"
echo " INSTALL.html README.html runbook.docx user_manual.docx"
