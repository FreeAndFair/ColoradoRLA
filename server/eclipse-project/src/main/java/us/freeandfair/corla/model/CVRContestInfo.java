/*
 * Free & Fair Colorado RLA System
 * 
 * @title ColoradoRLA
 * @created Aug 2, 2017
 * @copyright 2017 Free & Fair
 * @license GNU General Public License 3.0
 * @author Daniel M. Zimmerman <dmz@galois.com>
 * @description A system to assist in conducting statewide risk-limiting audits.
 */

package us.freeandfair.corla.model;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * A cast vote record contains information about a single ballot, either 
 * imported from a tabulator export file or generated by auditors.
 * 
 * @author Daniel M. Zimmerman
 * @version 0.0.1
 */
@Entity
@Table(name = "cvr_contest_info")
//this class has many fields that would normally be declared final, but
//cannot be for compatibility with Hibernate and JPA.
@SuppressWarnings("PMD.ImmutableField")
public class CVRContestInfo implements Serializable {
  /**
   * The serialVersionUID.
   */
  private static final long serialVersionUID = 1L;

  /**
   * The table of objects that have been created.
   */
  private static final Map<CVRContestInfo, CVRContestInfo> CACHE = 
      new HashMap<CVRContestInfo, CVRContestInfo>();
  
  /**
   * The table of objects by ID.
   */
  private static final Map<Long, CVRContestInfo> BY_ID =
      new HashMap<Long, CVRContestInfo>();
  
  /**
   * The current ID number to be used.
   */
  private static int current_id;
  
  /**
   * The database ID of this record.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "id", updatable = false, nullable = false)
  private Long my_id = getID();

  /**
   * The contest in this record.
   */
  private Contest my_contest;
  
  /** 
   * The comment for this contest.
   */
  private String my_comment;
  
  /**
   * The consensus flag for this contest
   */
  private Boolean my_consensus;
  
  /**
   * The choices for this contest.
   */
  private Set<Choice> my_choices;

  /**
   * Constructs an empty CVRContestInfo, solely for persistence.
   */
  protected CVRContestInfo() {
    // default values for everything
  }
  
  /**
   * @return the next ID
   */
  private static synchronized long getID() {
    return current_id++;
  }
  
  
}
